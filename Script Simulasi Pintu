#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <WiFi.h>
#include <ThingSpeak.h>

#define RELAY_PIN   19 
#define ROW_NUM     4  
#define COLUMN_NUM  4 

char keys[ROW_NUM][COLUMN_NUM] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte pin_rows[ROW_NUM] = {12, 14, 27, 26};   
byte pin_column[COLUMN_NUM] = {25, 33, 32, 17};  

Keypad keypad = Keypad(makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM);

const String pin_1 = "1234"; 
const String pin_2 = "4444";  
const String pin_3 = "ABCD";  
String masukan_pin;

LiquidCrystal_I2C lcd(0x27, 16, 2); 

char ssid[] = "Wokwi-GUEST";
char pass[] = ""; 

WiFiClient client;
unsigned long myChannelNumber = 3014689;
const char * myWriteAPIKey = "M3JFT99ZSBPPOMAG";
int statusCode;
unsigned long lastSendTime = 0;

void setup() {
  Serial.begin(9600);
  masukan_pin.reserve(32);    
  pinMode(RELAY_PIN, OUTPUT); 
  digitalWrite(RELAY_PIN, HIGH);
  lcd.init();                    
  lcd.backlight();

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, pass);
  Serial.print("Connecting to WiFi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nWiFi connected.");
  ThingSpeak.begin(client);
}

void loop() {
  char key = keypad.getKey();

  if (key) {
    Serial.println(key);

    if (key == '*') {
      masukan_pin = ""; 
      lcd.clear();
    } else if (key == '#') {
      lcd.clear();
      if (masukan_pin == pin_1 || masukan_pin == pin_2 || masukan_pin == pin_3) {
        Serial.println("Valid Password => unlock the door");
        lcd.setCursor(0, 0);
        lcd.print("CORRECT!");
        lcd.setCursor(0, 1);
        lcd.print("DOOR UNLOCKED!");

        digitalWrite(RELAY_PIN, LOW); 
        delay(20000);
        digitalWrite(RELAY_PIN, HIGH);

        // Kirim status ke ThingSpeak
        if (millis() - lastSendTime > 16000) { // minimal 15 detik
          ThingSpeak.setField(1, "Door Opened");
          ThingSpeak.setField(2, masukan_pin); // Kirim PIN yang dipakai
          statusCode = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);

          if (statusCode == 200) {
            Serial.println("Channel update successful.");
          } else {
            Serial.println("Problem Writing data. HTTP error code: " + String(statusCode));
          }

          lastSendTime = millis();
        }

      } else {
        Serial.println("PIN Salah => Coba Lagi");
        lcd.setCursor(0, 0);
        lcd.print("Salah PIN");
        lcd.setCursor(0, 1);
        lcd.print("Tidak Dizinkan");
      }

      masukan_pin = "";
    } else {
      if (masukan_pin.length() == 0) {
        lcd.clear();
      }

      masukan_pin += key; 
      lcd.setCursor(masukan_pin.length(), 0); 
      lcd.print('*');                 
    }
  }
}
